name: Build IOS
on:
  push:
    branches:
      - master
      - feature/testSlack

jobs:
  ios-build:
    name: IOS Build
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ios

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - id: set_var2
        run: |
          content=`cat ./ReactNativeTestProject.xcodeproj/project.pbxproj | grep -m1 'MARKETING_VERSION' | cut -d'=' -f2 | tr -d ';' | tr -d ' '`
          echo "::set-output name=marketingVersion::$content"
      - id: set_var3
        run: |
          echo "v${{ steps.set_var.outputs.marketingVersion }}"
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Restore node_modules from cache
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # - name: Install dependencies
      #   run: yarn install --network-timeout 300000

      # - name: Setup Ruby (bundle)
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 2.7.4
      #     bundler-cache: true

      # - name: Restore Pods cache
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ios/Pods
      #       ~/Library/Caches/CocoaPods
      #       ~/.cocoapods
      #     key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pods-

      # - name: Install Pods
      #   run: npx pod-install

      # - name: Build IOS App
      #   uses: yukiarrr/ios-build-action@v1.5.0
      #   with:
      #     project-path: ios/ReactNativeTestProject.xcodeproj
      #     p12-base64: ${{ secrets.IOS_P12_BASE64 }}
      #     mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
      #     code-signing-identity: 'iPhone Distribution'
      #     team-id: ${{ secrets.IOS_TEAM_ID }}
      #     certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      #     workspace-path: ios/ReactNativeTestProject.xcworkspace
      #     scheme: ReactNativeTestProject

      # - name: 'Upload app to TestFlight'
      #   uses: apple-actions/upload-testflight-build@v1
      #   with:
      #     app-path: 'output.ipa'
      #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
      #     api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
          
      # - id: set_var
      #   run: |
      #     content=`cat ./ReactNativeTestProject.xcodeproj/project.pbxproj | grep -m1 'MARKETING_VERSION' | cut -d'=' -f2 | tr -d ';' | tr -d ' '`
      #     echo "::set-output name=marketingVersion::"$content""
          
      # - name: Post to a Slack channel
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.19.0
      #   with:
      #     # Slack channel id, channel name, or user id to post message.
      #     # See also: https://api.slack.com/methods/chat.postMessage#channels
      #     channel-id: 'C02Q7CXQV37'
      #     # Message to post
      #     slack-message: "Hi. A new v${{ steps.set_var.outputs.marketingVersion }} version of our ios app has been uploaded to Testflight!"
      #   env:
      #     # Slack developer bot token
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
